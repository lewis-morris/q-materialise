"""
Sphinx configuration for the Q-Materialise documentation.

This file contains only the most minimal configuration to build the
Alabaster-themed documentation. See the Sphinx documentation for all
available options:
https://www.sphinx-doc.org/en/master/usage/configuration.html
"""

import sys
from pathlib import Path
from datetime import datetime

# -- Path setup --------------------------------------------------------------
# Add the project source directory to sys.path for autodoc to find the package
sys.path.insert(0, str(Path(__file__).resolve().parent.parent / "src"))

# -- Project information -----------------------------------------------------
project = "Q-Materialise"
author = "Lewis (Arched dev)"
copyright = f"{datetime.now().year}, {author}"
# The root document (formerly master_doc)
root_doc = "index"

# -- General configuration ---------------------------------------------------
# Sphinx extensions
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.napoleon",
    "sphinx.ext.autodoc.typehints",
    # Automatically generate stub pages for documented members.
    # This extension works together with :members: directives to
    # create summary pages for classes, functions and modules. Without
    # it the `api` page can remain empty if imports fail.
    "sphinx.ext.autosummary",
]

# Render type hints in the description rather than signature
autodoc_typehints = "description"

# When building the API documentation we do not necessarily have the
# various Qt bindings installed in the environment used by Sphinx.
# Attempting to import PySide6, PyQt6, PySide2 or PyQt5 would raise
# ImportError and cause the ``automodule`` directives in api.rst to
# silently fail, producing an empty page.  To avoid this we tell
# autodoc to mock these modules when they cannot be imported.  Mocking
# simply creates lightweight objects in place of the real packages so
# that the public API of ``q_materialise`` can still be introspected.
autodoc_mock_imports = ["PySide6", "PyQt6", "PySide2", "PyQt5"]

# Enable generation of autosummary stubs.  When ``make html`` runs
# autosummary will scan the package and create short summary tables
# for all documented objects.  Combined with the ``:members:`` option
# in ``api.rst`` this ensures that classes and functions are listed
# explicitly in the reference documentation.
autosummary_generate = True

# Paths that contain templates
templates_path = ["_templates"]
# Files and directories to ignore
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store"]

# Language for autogenerated content
language = "en"

# -- Options for HTML output -------------------------------------------------
# Use the Alabaster theme
html_theme = "alabaster"
# If you have custom static files (e.g., style sheets), use this
html_static_path = ["_static"]

# Base name for HTML help builder
htmlhelp_basename = "QMaterialiseDoc"
